<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>back-end on Crispy bLog</title>
    <link>https://heozeop.github.io/tags/back-end/</link>
    <description>Recent content in back-end on Crispy bLog</description>
    <image>
      <url>https://heozeop.github.io/static/%ED%94%84%EB%A1%9C%ED%95%84%20%EC%9D%B4%EB%AF%B8%EC%A7%80.jpeg</url>
      <link>https://heozeop.github.io/static/%ED%94%84%EB%A1%9C%ED%95%84%20%EC%9D%B4%EB%AF%B8%EC%A7%80.jpeg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 06 Jul 2023 21:36:00 +0900</lastBuildDate><atom:link href="https://heozeop.github.io/tags/back-end/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[NestJS] 스웨거에 BasicAuth 더하기, feat fastify,GCP</title>
      <link>https://heozeop.github.io/post/nestjs-basic-auth-fastify/</link>
      <pubDate>Thu, 06 Jul 2023 21:36:00 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/nestjs-basic-auth-fastify/</guid>
      <description>스웨거 흔히 스웨거(Swagger)라고 부르는 OpenAPI를 사용할때, 저는 누가 어떻게 보느냐를 고민합니다. 직접 인증을 구현한 경우는 로그인을 시키고, AWS를 사용하는 경우 ip로 접근을 불가하게 만들기도 했습니다. 하지만 GCP의 CloudRun을 이용하는 경우, 구체적인 자원에 접근하기 어려워 Ip로 접근을 차단하는 것은 한계가 있었습니다.
그래서 떠올린게 basic auth였습니다. 물론 brute-force 공격에는 뚫리기야 하겠지만, 비용 대비 얻는게 크다고 생각했습니다. 제가 원하는 건 아무나 보지 못하는 것이고, 보안 관리는 기본적으로 구글에서 해주기 때문에 제 목적에 딱 알맞는 것이었죠.</description>
    </item>
    
  </channel>
</rss>
