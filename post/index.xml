<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Crispy bLog</title>
    <link>https://heozeop.github.io/post/</link>
    <description>Recent content in Posts on Crispy bLog</description>
    <image>
      <url>https://heozeop.github.io/static/%ED%94%84%EB%A1%9C%ED%95%84%20%EC%9D%B4%EB%AF%B8%EC%A7%80.jpeg</url>
      <link>https://heozeop.github.io/static/%ED%94%84%EB%A1%9C%ED%95%84%20%EC%9D%B4%EB%AF%B8%EC%A7%80.jpeg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 05 Oct 2023 07:19:49 +0900</lastBuildDate><atom:link href="https://heozeop.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>디테일을 챙기는 개발자가 되고 싶어 하는 고찰</title>
      <link>https://heozeop.github.io/post/detailed-developer/</link>
      <pubDate>Thu, 05 Oct 2023 07:19:49 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/detailed-developer/</guid>
      <description>TL;DR 저는 디테일을 잘 못챙깁니다. 디테일을 챙기는 개발자가 어떤 사람인지 정리합니다. 디테일을 챙기는 개발자가 되기 위해 남은 과정을 정리합니다. 정리한 과정이 올바른지 퇴고 합니다. 저는 디테일을 잘 못챙깁니다. 항상 제가 받는 피드백이 있습니다.
| &amp;lsquo;크리스피님, 여기 이 입력에서는 이렇게 되어 확인 요청드립니다.&amp;rsquo;
지금까지는 받아오면서 아무생각 없이 이슈에 대응만 하였습니다. 그러다 문득 깨달아 버렸습니다.
&amp;lsquo;이게 맞나?&amp;rsquo;
항상 하는 실수인데, 예방하는 수는 없었을까? 한번 더 확인 하는게 불충분 하다면 다른 방법을 찾는게 좋지 않았을까?</description>
    </item>
    
    <item>
      <title>어떤 개발자가 되고 싶은지에 관한 고찰</title>
      <link>https://heozeop.github.io/post/i-wanna-be/</link>
      <pubDate>Wed, 30 Aug 2023 21:59:51 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/i-wanna-be/</guid>
      <description>TL;DR 상상해 보았습니다. 5년 뒤를 상상해 보았습니다. 3년 뒤를 상상해 보았습니다. 1년 뒤를 상상해 보았습니다. 저는 이런 개발자가 되고 싶은가 봅니다. 고민해 보았습니다. 최근 CTO님과 면담하며 질문을 받았습니다. &amp;lsquo;승찬님은 어떤 개발자가 되고 싶나요?&amp;rsquo; 항상 머리 복잡하다며 넘겨왔던 질문이기에 모른척을 하였습니다. 이제 저도 연차로 4년차가 됩니다. 하지만 아직 &amp;lsquo;되고 싶은 개발자&amp;rsquo;는 커녕 &amp;lsquo;어떤 공부를 할지&amp;rsquo; 조차 스스로 정하지 못했습니다. 집에 와서 심란한 마음에 더 이상은 이럴 수 없다고 생각했습니다. 혼자 끙끙 앓아봐야 소용없다고 판단해, 고민을 공유해 봅니다.</description>
    </item>
    
    <item>
      <title>[NestJS] 스웨거에 BasicAuth 더하기, feat fastify,GCP</title>
      <link>https://heozeop.github.io/post/nestjs-basic-auth-fastify/</link>
      <pubDate>Thu, 06 Jul 2023 21:36:00 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/nestjs-basic-auth-fastify/</guid>
      <description>스웨거 흔히 스웨거(Swagger)라고 부르는 OpenAPI를 사용할때, 저는 누가 어떻게 보느냐를 고민합니다. 직접 인증을 구현한 경우는 로그인을 시키고, AWS를 사용하는 경우 ip로 접근을 불가하게 만들기도 했습니다. 하지만 GCP의 CloudRun을 이용하는 경우, 구체적인 자원에 접근하기 어려워 Ip로 접근을 차단하는 것은 한계가 있었습니다.
그래서 떠올린게 basic auth였습니다. 물론 brute-force 공격에는 뚫리기야 하겠지만, 비용 대비 얻는게 크다고 생각했습니다. 제가 원하는 건 아무나 보지 못하는 것이고, 보안 관리는 기본적으로 구글에서 해주기 때문에 제 목적에 딱 알맞는 것이었죠.</description>
    </item>
    
    <item>
      <title>좋은 코드와 나쁜 코드</title>
      <link>https://heozeop.github.io/post/book-good-code-bad-code/</link>
      <pubDate>Tue, 20 Jun 2023 16:10:35 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/book-good-code-bad-code/</guid>
      <description>품질의 정의와 좋다 나쁘다를 생각하기</description>
    </item>
    
    <item>
      <title>[알고리즘] Algorithm Boj 1107</title>
      <link>https://heozeop.github.io/post/algorithm-boj-1107/</link>
      <pubDate>Fri, 26 May 2023 05:12:05 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/algorithm-boj-1107/</guid>
      <description>TL;DR
GOLD4 문제 왜틀리지 시전 틀린 케이스를 찾아버리고야 말테다 그렇구나. 정확한 사고로 풀어야 겠다 오늘의 문제 뭔일인가. 논리적인 접근 위 문제는 특정한 값 위나 아래로 접근하며 가장 빠르게 도달하는 경우의 수를 구하는 문제입니다. 이러한 특성에 근거해, 목표로 하는 값의 2배로 접근시 충분히 원하는 결과를 얻을 것이라고 생각했습니다.
2번째 제출 까지는 말이죠
틀린답 using namespace std; vector&amp;lt;int&amp;gt; allowed; int targetChannel; int visited[1000001]; int m; int count(int); // 특정 지점으로 가는데까지 버튼 누르는 수 계산 void findCombinations(int, vector&amp;lt;int&amp;gt;&amp;amp;); // 1~제한까지 숫자 조합 생성 void input(); void solve(); int main(void) { input(); solve(); return 0; } void input() { cin &amp;gt;&amp;gt; targetChannel &amp;gt;&amp;gt; m; int temp; set&amp;lt;int&amp;gt; blocked; for(int i = 0; i &amp;lt; m; ++i) { cin &amp;gt;&amp;gt; temp; blocked.</description>
    </item>
    
    <item>
      <title>[책] &#39;기억, 꿈, 사상&#39;에 대한 감상</title>
      <link>https://heozeop.github.io/post/book-memories-dreams-reflections/</link>
      <pubDate>Sun, 30 Oct 2022 20:49:13 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/book-memories-dreams-reflections/</guid>
      <description>저는 부끄러움이 많은 관심 종자입니다. 이 책의 감상을 나누고 싶지만, 거절이 무서워 글이라는 방법을 택했습니다. 구분선 아래로, 문장과 감상의 형식이 전개 됩니다. 읽은 날, 내용은 추가될 것입니다. 언젠가 이 내용을 함께 논의 할 수 있기를 소원해 봅니다.
2022년 스터디 카페에서 시작하며
문득 취리히에서의 내 생활이 떠올랐다. 내가 심취했던 유년시절의 세계는 영원한 것이었으며, 나는 그것으로부터 떨어져나와, 계속 굴러가며 점점 더 멀어져가는 시간 속으로 빠져들어가고 만 것이었다. 나는 나의 미래를 잃지 않기 위해 그 장소에서 억지로 몸을 돌려야만 했다.</description>
    </item>
    
    <item>
      <title>[경험] 시스템에 불이 확, 나는 왁</title>
      <link>https://heozeop.github.io/post/when-fire-on-the-external-system/</link>
      <pubDate>Fri, 28 Oct 2022 21:31:00 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/when-fire-on-the-external-system/</guid>
      <description>아쉬운 에러 대응 과정을 기록해 봅니다.</description>
    </item>
    
    <item>
      <title>의식적으로 쓰기 - 선언과 단언</title>
      <link>https://heozeop.github.io/post/typescript-type-assignment/</link>
      <pubDate>Wed, 19 Oct 2022 22:31:04 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/typescript-type-assignment/</guid>
      <description>들어가며 Typescript에선 변수에 type을 어떻게 할당하나요?
여러분이 위와 같은 질문을 받았다면, 어떻게 답변하시겠어요? 저는 Effective Typescript라는 책을 읽으면서, 이 질문을 생각하고 순간 멍해짐을 느꼈습니다. 제겐 너무나도 당연스러운 말인 변수에 type을 할당하는 문장을 풀어서 설명하려니, 적절한 문장이 떠오르지 않았습니다. Typescript에서 변수에 type을 할당하는 것은 도대체 어떤 의미일까요?
변수에 type을 할당한다? 저는 변수에 type을 할당한다는 것에 영향을 받는 부분에 집중했습니다. 그래서 변수에 type을 할당한다는 말을 아래와 같이 해석해 보았습니다. 결국 할당으로 영향을 받는 것이 Typescript compiler이기 때문입니다.</description>
    </item>
    
    <item>
      <title>[개발/RPC] 무에서 gRPC개념 쌓기</title>
      <link>https://heozeop.github.io/post/overviewing-grpc-concepts/</link>
      <pubDate>Sun, 16 Oct 2022 16:13:21 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/overviewing-grpc-concepts/</guid>
      <description>notice
뜬구름 잡는 소리를 할 수 있습니다. 댓글 주시면 반영할 수 있도록 하겠습니다.
반말과 충청도 사투리가 섞여 있습니다. 읽기 어려우신 부분 알려주세요!
update log
2022.10.17 - gRPC는 HTTP/2를 사용하므로, TCP에 기반합니다. RPC가 뭐여 정의 Remote Procedure Call의 약자로, 외부 procedure를 실행하는 것
어서 도냐 grpc가 http2를 쓴댜
→ TCP를 4계층으로 쓰고, 그 위에서 돌아가는 걸거여
→ 그럼 application 계층인건가
장점 IPC 등의 작업 없이 일단 실행시키는 것 가능 서로 다른 언어에서 rpc 통신 방법만 맞추면, 통신 가능 단점 보안 문제가 있을 수 있음 응답이 비동기임 proto buffer는 또 뭐여 정의 google에서 만든 rpc 통신 규약으로, 강력한 message의 정의를 통해서 일관된 데이터 구조로 소통 가능</description>
    </item>
    
    <item>
      <title>[OS] 운영체제란?</title>
      <link>https://heozeop.github.io/post/role-of-operating-system/</link>
      <pubDate>Sun, 03 Jul 2022 21:17:44 +0900</pubDate>
      
      <guid>https://heozeop.github.io/post/role-of-operating-system/</guid>
      <description>운영체제의 정의와 역할을 알아봅니다.</description>
    </item>
    
    <item>
      <title>[경험] 오픈소스에 PR 해본 썰</title>
      <link>https://heozeop.github.io/post/learn-and-feel-from-simple-opensource-contribution/</link>
      <pubDate>Tue, 10 Aug 2021 21:16:03 +0000</pubDate>
      
      <guid>https://heozeop.github.io/post/learn-and-feel-from-simple-opensource-contribution/</guid>
      <description>DefinitelyTyped에 라이브러리 타입을 올려보고, chakra ui에 pr을 올리며(아직 진행 중) 느낀점을 간단히 소개합니다.</description>
    </item>
    
    <item>
      <title>[CSS] CSS 기본 컨셉과 규칙 충돌</title>
      <link>https://heozeop.github.io/post/css-basic-concept/</link>
      <pubDate>Mon, 04 Jan 2021 18:01:03 +0000</pubDate>
      
      <guid>https://heozeop.github.io/post/css-basic-concept/</guid>
      <description>CSS 규칙 충돌에 대비해서 Inheritance, Specificity, Cascading을 알아봅니다.</description>
    </item>
    
    <item>
      <title>[CSS] CSS? 그게 뭔데?</title>
      <link>https://heozeop.github.io/post/css-what-is-that/</link>
      <pubDate>Sun, 03 Jan 2021 23:01:03 +0000</pubDate>
      
      <guid>https://heozeop.github.io/post/css-what-is-that/</guid>
      <description>css의 정의를 알아봅니다.</description>
    </item>
    
    <item>
      <title>[경험] 사이트 로딩속도가 이 번들때문에 느려요!</title>
      <link>https://heozeop.github.io/post/too-big-bundle-size/</link>
      <pubDate>Sun, 03 Jan 2021 13:45:03 +0000</pubDate>
      
      <guid>https://heozeop.github.io/post/too-big-bundle-size/</guid>
      <description>초보 개발자의 살떨렸던 3시간</description>
    </item>
    
    <item>
      <title>[HTML] HTML body?</title>
      <link>https://heozeop.github.io/post/html-body/</link>
      <pubDate>Sat, 02 Jan 2021 15:01:03 +0000</pubDate>
      
      <guid>https://heozeop.github.io/post/html-body/</guid>
      <description>html의 body를 알자.</description>
    </item>
    
    <item>
      <title>[HTML] HTML head? 뭐더라...?</title>
      <link>https://heozeop.github.io/post/html-head/</link>
      <pubDate>Fri, 01 Jan 2021 15:24:03 +0000</pubDate>
      
      <guid>https://heozeop.github.io/post/html-head/</guid>
      <description>HTML head태그를 알자.</description>
    </item>
    
    <item>
      <title>[HTML] HTML? 설명해보자</title>
      <link>https://heozeop.github.io/post/html-definition/</link>
      <pubDate>Wed, 30 Dec 2020 22:12:03 +0000</pubDate>
      
      <guid>https://heozeop.github.io/post/html-definition/</guid>
      <description>html의 정의와 기본 속성.</description>
    </item>
    
  </channel>
</rss>
